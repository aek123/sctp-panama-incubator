// Generated by jextract

package netinet.sctp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$4 {

    static final FunctionDescriptor setsockopt$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle setsockopt$MH = RuntimeHelper.downcallHandle(
        "setsockopt",
        constants$4.setsockopt$FUNC, false
    );
    static final FunctionDescriptor listen$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle listen$MH = RuntimeHelper.downcallHandle(
        "listen",
        constants$4.listen$FUNC, false
    );
    static final FunctionDescriptor accept$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle accept$MH = RuntimeHelper.downcallHandle(
        "accept",
        constants$4.accept$FUNC, false
    );
    static final FunctionDescriptor shutdown$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle shutdown$MH = RuntimeHelper.downcallHandle(
        "shutdown",
        constants$4.shutdown$FUNC, false
    );
    static final FunctionDescriptor sockatmark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sockatmark$MH = RuntimeHelper.downcallHandle(
        "sockatmark",
        constants$4.sockatmark$FUNC, false
    );
    static final FunctionDescriptor isfdtype$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle isfdtype$MH = RuntimeHelper.downcallHandle(
        "isfdtype",
        constants$4.isfdtype$FUNC, false
    );
}


