// Generated by jextract

package netinet.sctp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class sctp_assocparams {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_INT$LAYOUT.withName("sasoc_assoc_id"),
        Constants$root.C_SHORT$LAYOUT.withName("sasoc_asocmaxrxt"),
        Constants$root.C_SHORT$LAYOUT.withName("sasoc_number_peer_destinations"),
        Constants$root.C_INT$LAYOUT.withName("sasoc_peer_rwnd"),
        Constants$root.C_INT$LAYOUT.withName("sasoc_local_rwnd"),
        Constants$root.C_INT$LAYOUT.withName("sasoc_cookie_life")
    ).withName("sctp_assocparams");
    public static MemoryLayout $LAYOUT() {
        return sctp_assocparams.$struct$LAYOUT;
    }
    static final VarHandle sasoc_assoc_id$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sasoc_assoc_id"));
    public static VarHandle sasoc_assoc_id$VH() {
        return sctp_assocparams.sasoc_assoc_id$VH;
    }
    public static int sasoc_assoc_id$get(MemorySegment seg) {
        return (int)sctp_assocparams.sasoc_assoc_id$VH.get(seg);
    }
    public static void sasoc_assoc_id$set( MemorySegment seg, int x) {
        sctp_assocparams.sasoc_assoc_id$VH.set(seg, x);
    }
    public static int sasoc_assoc_id$get(MemorySegment seg, long index) {
        return (int)sctp_assocparams.sasoc_assoc_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_assoc_id$set(MemorySegment seg, long index, int x) {
        sctp_assocparams.sasoc_assoc_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sasoc_asocmaxrxt$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sasoc_asocmaxrxt"));
    public static VarHandle sasoc_asocmaxrxt$VH() {
        return sctp_assocparams.sasoc_asocmaxrxt$VH;
    }
    public static short sasoc_asocmaxrxt$get(MemorySegment seg) {
        return (short)sctp_assocparams.sasoc_asocmaxrxt$VH.get(seg);
    }
    public static void sasoc_asocmaxrxt$set( MemorySegment seg, short x) {
        sctp_assocparams.sasoc_asocmaxrxt$VH.set(seg, x);
    }
    public static short sasoc_asocmaxrxt$get(MemorySegment seg, long index) {
        return (short)sctp_assocparams.sasoc_asocmaxrxt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_asocmaxrxt$set(MemorySegment seg, long index, short x) {
        sctp_assocparams.sasoc_asocmaxrxt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sasoc_number_peer_destinations$VH = $struct$LAYOUT.varHandle(
            PathElement.groupElement("sasoc_number_peer_destinations"));
    public static VarHandle sasoc_number_peer_destinations$VH() {
        return sctp_assocparams.sasoc_number_peer_destinations$VH;
    }
    public static short sasoc_number_peer_destinations$get(MemorySegment seg) {
        return (short)sctp_assocparams.sasoc_number_peer_destinations$VH.get(seg);
    }
    public static void sasoc_number_peer_destinations$set( MemorySegment seg, short x) {
        sctp_assocparams.sasoc_number_peer_destinations$VH.set(seg, x);
    }
    public static short sasoc_number_peer_destinations$get(MemorySegment seg, long index) {
        return (short)sctp_assocparams.sasoc_number_peer_destinations$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_number_peer_destinations$set(MemorySegment seg, long index, short x) {
        sctp_assocparams.sasoc_number_peer_destinations$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sasoc_peer_rwnd$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sasoc_peer_rwnd"));
    public static VarHandle sasoc_peer_rwnd$VH() {
        return sctp_assocparams.sasoc_peer_rwnd$VH;
    }
    public static int sasoc_peer_rwnd$get(MemorySegment seg) {
        return (int)sctp_assocparams.sasoc_peer_rwnd$VH.get(seg);
    }
    public static void sasoc_peer_rwnd$set( MemorySegment seg, int x) {
        sctp_assocparams.sasoc_peer_rwnd$VH.set(seg, x);
    }
    public static int sasoc_peer_rwnd$get(MemorySegment seg, long index) {
        return (int)sctp_assocparams.sasoc_peer_rwnd$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_peer_rwnd$set(MemorySegment seg, long index, int x) {
        sctp_assocparams.sasoc_peer_rwnd$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sasoc_local_rwnd$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sasoc_local_rwnd"));
    public static VarHandle sasoc_local_rwnd$VH() {
        return sctp_assocparams.sasoc_local_rwnd$VH;
    }
    public static int sasoc_local_rwnd$get(MemorySegment seg) {
        return (int)sctp_assocparams.sasoc_local_rwnd$VH.get(seg);
    }
    public static void sasoc_local_rwnd$set( MemorySegment seg, int x) {
        sctp_assocparams.sasoc_local_rwnd$VH.set(seg, x);
    }
    public static int sasoc_local_rwnd$get(MemorySegment seg, long index) {
        return (int)sctp_assocparams.sasoc_local_rwnd$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_local_rwnd$set(MemorySegment seg, long index, int x) {
        sctp_assocparams.sasoc_local_rwnd$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle sasoc_cookie_life$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("sasoc_cookie_life"));
    public static VarHandle sasoc_cookie_life$VH() {
        return sctp_assocparams.sasoc_cookie_life$VH;
    }
    public static int sasoc_cookie_life$get(MemorySegment seg) {
        return (int)sctp_assocparams.sasoc_cookie_life$VH.get(seg);
    }
    public static void sasoc_cookie_life$set( MemorySegment seg, int x) {
        sctp_assocparams.sasoc_cookie_life$VH.set(seg, x);
    }
    public static int sasoc_cookie_life$get(MemorySegment seg, long index) {
        return (int)sctp_assocparams.sasoc_cookie_life$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void sasoc_cookie_life$set(MemorySegment seg, long index, int x) {
        sctp_assocparams.sasoc_cookie_life$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


