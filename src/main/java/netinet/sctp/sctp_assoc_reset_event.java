// Generated by jextract

package netinet.sctp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class sctp_assoc_reset_event {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_SHORT$LAYOUT.withName("assocreset_type"),
        Constants$root.C_SHORT$LAYOUT.withName("assocreset_flags"),
        Constants$root.C_INT$LAYOUT.withName("assocreset_length"),
        Constants$root.C_INT$LAYOUT.withName("assocreset_assoc_id"),
        Constants$root.C_INT$LAYOUT.withName("assocreset_local_tsn"),
        Constants$root.C_INT$LAYOUT.withName("assocreset_remote_tsn")
    ).withName("sctp_assoc_reset_event");
    public static MemoryLayout $LAYOUT() {
        return sctp_assoc_reset_event.$struct$LAYOUT;
    }
    static final VarHandle assocreset_type$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("assocreset_type"));
    public static VarHandle assocreset_type$VH() {
        return sctp_assoc_reset_event.assocreset_type$VH;
    }
    public static short assocreset_type$get(MemorySegment seg) {
        return (short)sctp_assoc_reset_event.assocreset_type$VH.get(seg);
    }
    public static void assocreset_type$set( MemorySegment seg, short x) {
        sctp_assoc_reset_event.assocreset_type$VH.set(seg, x);
    }
    public static short assocreset_type$get(MemorySegment seg, long index) {
        return (short)sctp_assoc_reset_event.assocreset_type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_type$set(MemorySegment seg, long index, short x) {
        sctp_assoc_reset_event.assocreset_type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle assocreset_flags$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("assocreset_flags"));
    public static VarHandle assocreset_flags$VH() {
        return sctp_assoc_reset_event.assocreset_flags$VH;
    }
    public static short assocreset_flags$get(MemorySegment seg) {
        return (short)sctp_assoc_reset_event.assocreset_flags$VH.get(seg);
    }
    public static void assocreset_flags$set( MemorySegment seg, short x) {
        sctp_assoc_reset_event.assocreset_flags$VH.set(seg, x);
    }
    public static short assocreset_flags$get(MemorySegment seg, long index) {
        return (short)sctp_assoc_reset_event.assocreset_flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_flags$set(MemorySegment seg, long index, short x) {
        sctp_assoc_reset_event.assocreset_flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle assocreset_length$VH = $struct$LAYOUT.varHandle(PathElement.groupElement("assocreset_length"));
    public static VarHandle assocreset_length$VH() {
        return sctp_assoc_reset_event.assocreset_length$VH;
    }
    public static int assocreset_length$get(MemorySegment seg) {
        return (int)sctp_assoc_reset_event.assocreset_length$VH.get(seg);
    }
    public static void assocreset_length$set( MemorySegment seg, int x) {
        sctp_assoc_reset_event.assocreset_length$VH.set(seg, x);
    }
    public static int assocreset_length$get(MemorySegment seg, long index) {
        return (int)sctp_assoc_reset_event.assocreset_length$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_length$set(MemorySegment seg, long index, int x) {
        sctp_assoc_reset_event.assocreset_length$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle assocreset_assoc_id$VH = $struct$LAYOUT.varHandle(
            PathElement.groupElement("assocreset_assoc_id"));
    public static VarHandle assocreset_assoc_id$VH() {
        return sctp_assoc_reset_event.assocreset_assoc_id$VH;
    }
    public static int assocreset_assoc_id$get(MemorySegment seg) {
        return (int)sctp_assoc_reset_event.assocreset_assoc_id$VH.get(seg);
    }
    public static void assocreset_assoc_id$set( MemorySegment seg, int x) {
        sctp_assoc_reset_event.assocreset_assoc_id$VH.set(seg, x);
    }
    public static int assocreset_assoc_id$get(MemorySegment seg, long index) {
        return (int)sctp_assoc_reset_event.assocreset_assoc_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_assoc_id$set(MemorySegment seg, long index, int x) {
        sctp_assoc_reset_event.assocreset_assoc_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle assocreset_local_tsn$VH = $struct$LAYOUT.varHandle(
            PathElement.groupElement("assocreset_local_tsn"));
    public static VarHandle assocreset_local_tsn$VH() {
        return sctp_assoc_reset_event.assocreset_local_tsn$VH;
    }
    public static int assocreset_local_tsn$get(MemorySegment seg) {
        return (int)sctp_assoc_reset_event.assocreset_local_tsn$VH.get(seg);
    }
    public static void assocreset_local_tsn$set( MemorySegment seg, int x) {
        sctp_assoc_reset_event.assocreset_local_tsn$VH.set(seg, x);
    }
    public static int assocreset_local_tsn$get(MemorySegment seg, long index) {
        return (int)sctp_assoc_reset_event.assocreset_local_tsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_local_tsn$set(MemorySegment seg, long index, int x) {
        sctp_assoc_reset_event.assocreset_local_tsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle assocreset_remote_tsn$VH = $struct$LAYOUT.varHandle(
            PathElement.groupElement("assocreset_remote_tsn"));
    public static VarHandle assocreset_remote_tsn$VH() {
        return sctp_assoc_reset_event.assocreset_remote_tsn$VH;
    }
    public static int assocreset_remote_tsn$get(MemorySegment seg) {
        return (int)sctp_assoc_reset_event.assocreset_remote_tsn$VH.get(seg);
    }
    public static void assocreset_remote_tsn$set( MemorySegment seg, int x) {
        sctp_assoc_reset_event.assocreset_remote_tsn$VH.set(seg, x);
    }
    public static int assocreset_remote_tsn$get(MemorySegment seg, long index) {
        return (int)sctp_assoc_reset_event.assocreset_remote_tsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void assocreset_remote_tsn$set(MemorySegment seg, long index, int x) {
        sctp_assoc_reset_event.assocreset_remote_tsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.nativeAllocator(scope)); }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.nativeAllocator(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


